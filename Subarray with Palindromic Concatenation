/*
For a given array and integer K check if any subarray exists in the
subarray of size K check if any subarray of size K exists in the array
such that concatenation of elements form a palindrome.
*/

bool isPalindrome(int n) {
    int temp = n, number = 0;
    while (temp > 0) {
        number = number * 10 + temp % 10;
        temp = temp / 10;
    }
    if (number == n) {
        return true;
    }
    return false;
}

int findPalindromicSubarray(vector<int> arr, int k) {
    int num = 0;
    for (int i = 0; i < k; i++) {
        num = num * 10 + arr[i];
    }
    if (isPalindrome(num)) {
        return 0;
    }
    for (int j = k; j < arr.size(); j++) {
        num = (num % (int)pow(10, k - 1)) + arr[j];
        if (isPalindrome(num)) {
            return j - k + 1;
        }
    }
    return -1;
}
