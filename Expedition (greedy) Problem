int t; cin >> t;
    while (t--) {
        int n; cin >> n;
        vpii a(n);
        rep(i, 0, n) {
            cin >> a[i].first >> a[i].second;
        }
        int l, p;
        cin >> l >> p;
        rep(i, 0, n) {
            a[i].first = l - a[i].first;
        }
        sort(a.begin(), a.end());
        int ans = 0;
        int curr = p;
        bool flag = 0;
        priority_queue<int, vector<int> > pq;
        rep(i, 0, n) {
            if (curr >= l) break;
            while (curr < a[i].first) {
                if (pq.empty()) {
                    flag = 1; break;
                }
                ans++;
                curr += pq.top();
                pq.pop();
            }
            if (flag) break;
            pq.push(a[i].second);
        }
        if (flag) cout << -1 << endl;
        else {
            while (!pq.empty() && curr < l) {
                curr += pq.top();
                pq.pop();
                ans++;
            }
            if (curr < l) cout << -1 << endl;
            else cout << ans << endl;
        }
    }
